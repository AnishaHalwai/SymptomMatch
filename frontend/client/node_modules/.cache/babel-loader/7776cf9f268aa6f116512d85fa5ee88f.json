{"ast":null,"code":"var _jsxFileName = \"/Users/anishahalwai/Projects/My-Syptom-match/frontend/client/src/Diagnose.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Diagnose() {\n  _s();\n\n  const [data, setData] = useState([{}]);\n  useEffect(() => {\n    fetch('/sys').then(res => res.json()).then(data => {\n      setData(data);\n      console.log(data);\n    });\n  }, []);\n  let array = [];\n\n  for (let i = 0; i < data.items.length; i++) {\n    array.push( /*#__PURE__*/_jsxDEV(Item, {\n      item: data.items[i]\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Diagnosis results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), data]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Diagnose, \"odp7ftN9IDg1xewk47EaAZiwHYc=\");\n\n_c = Diagnose;\nexport default Diagnose;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diagnose\");","map":{"version":3,"names":["React","useState","useEffect","Diagnose","data","setData","fetch","then","res","json","console","log","array","i","items","length","push"],"sources":["/Users/anishahalwai/Projects/My-Syptom-match/frontend/client/src/Diagnose.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n\nfunction Diagnose(){\n\n    const [data, setData] = useState([{}]);\n\n    useEffect(() => {\n        fetch('/sys').then(\n            res => res.json()\n        ).then(\n            data => {\n                setData(data)\n                console.log(data)\n            }\n        )  \n    }, [])\n\n    let array = [];\n    for(let i = 0; i < data.items.length; i++) {\n      array.push(\n        <Item key={i} item={data.items[i]} />\n      );\n    }\n\n    return (\n        <div>\n            <h1>Diagnosis results</h1>\n            {data}\n            {/* {(typeof data === \"undefined\") ? (\n                <p> Loading...</p>\n            ) : (\n                data.map()\n            )\n        } */}\n        </div>\n    );\n}\n\nexport default Diagnose;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,QAAT,GAAmB;EAAA;;EAEf,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;EAEAC,SAAS,CAAC,MAAM;IACZI,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CACIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADX,EAEEF,IAFF,CAGIH,IAAI,IAAI;MACJC,OAAO,CAACD,IAAD,CAAP;MACAM,OAAO,CAACC,GAAR,CAAYP,IAAZ;IACH,CANL;EAQH,CATQ,EASN,EATM,CAAT;EAWA,IAAIQ,KAAK,GAAG,EAAZ;;EACA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGT,IAAI,CAACU,KAAL,CAAWC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;IACzCD,KAAK,CAACI,IAAN,eACE,QAAC,IAAD;MAAc,IAAI,EAAEZ,IAAI,CAACU,KAAL,CAAWD,CAAX;IAApB,GAAWA,CAAX;MAAA;MAAA;MAAA;IAAA,QADF;EAGD;;EAED,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKT,IAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH;;GAlCQD,Q;;KAAAA,Q;AAoCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}