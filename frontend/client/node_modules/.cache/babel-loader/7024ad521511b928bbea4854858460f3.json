{"ast":null,"code":"var _jsxFileName = \"/Users/anishahalwai/Projects/My-Syptom-match/frontend/client/src/Diagnose.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Togglebutton from './Togglebutton';\nimport './Diagnose.css';\nimport { Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Diagnose() {\n  _s();\n\n  const [data, setData] = useState([{}]);\n  var letter = \"\";\n  var all = [];\n  useEffect(() => {\n    fetch('/sys', {\n      mode: \"no-cors\"\n    }).then(res => res.json()).then(data => {\n      setData(data); // console.log(data)\n    });\n  }, []);\n\n  const diagnose = () => {\n    console.log(\"Done clicked\");\n\n    /*#__PURE__*/\n    _jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/predictions\",\n        element: /*#__PURE__*/_jsxDEV(Predict, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Diagnose-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Diagnose-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select Symptoms: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Diagnose-header\",\n      children: typeof data === \"undefined\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this) : data.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [letter !== item[0][0] ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item[0][0].toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }, this) : \"\", letter !== item[0][0] ? (letter = item[0][0], /*#__PURE__*/_jsxDEV(Togglebutton, {\n          name: item,\n          category_same: false,\n          arr: all\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(Togglebutton, {\n          name: item,\n          category_same: true,\n          arr: all\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Diagnose-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: diagnose,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Diagnose, \"odp7ftN9IDg1xewk47EaAZiwHYc=\");\n\n_c = Diagnose;\nexport default Diagnose;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diagnose\");","map":{"version":3,"names":["React","useState","useEffect","Togglebutton","Routes","Route","Diagnose","data","setData","letter","all","fetch","mode","then","res","json","diagnose","console","log","map","item","i","toUpperCase"],"sources":["/Users/anishahalwai/Projects/My-Syptom-match/frontend/client/src/Diagnose.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Togglebutton from './Togglebutton';\nimport './Diagnose.css'\nimport {Routes, Route} from 'react-router-dom';\n\nfunction Diagnose(){\n\n    const [data, setData] = useState([{}]);\n    var letter = \"\"\n    var all = []\n\n    useEffect(() => {\n        fetch('/sys', {mode: \"no-cors\"}).then(\n            res => res.json()\n        ).then(\n            data => {\n                setData(data)\n                // console.log(data)\n            }\n        )  \n    }, [])\n\n    const diagnose=()=> {\n        console.log(\"Done clicked\");\n        <Routes>\n          <Route path =\"/predictions\" element={<Predict/>} /> \n        </Routes>\n    }\n   \n    return (\n        <div className='Diagnose-page'>\n            <div className='Diagnose-header'> \n                <h1>Select Symptoms: </h1>\n            </div>\n            \n            <div className='Diagnose-header'>\n\n            \n                {(typeof data === \"undefined\") ? (\n                    <p> Loading...</p>\n                ) : (\n                    \n                    data.map((item, i) => (\n                        \n                        <div key={i}>\n                            {(letter!==item[0][0]) ?\n                                <h3>{item[0][0].toUpperCase()}</h3> : \"\" }\n                            \n                            {(letter!==item[0][0]) ? \n                                (letter=item[0][0],\n                                <Togglebutton name={item} category_same={false} arr={all}/> ): \n                                <Togglebutton name={item} category_same={true} arr={all}/>\n                            }\n                            \n                        </div>\n                    ))\n                )}\n                \n            </div>\n            \n            <div className='Diagnose-header'>   \n                <button onClick={diagnose}>Done</button> \n            </div>\n            \n        </div>\n    );\n}\n\nexport default Diagnose;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,gBAAP;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;;;AAEA,SAASC,QAAT,GAAmB;EAAA;;EAEf,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;EACA,IAAIQ,MAAM,GAAG,EAAb;EACA,IAAIC,GAAG,GAAG,EAAV;EAEAR,SAAS,CAAC,MAAM;IACZS,KAAK,CAAC,MAAD,EAAS;MAACC,IAAI,EAAE;IAAP,CAAT,CAAL,CAAiCC,IAAjC,CACIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADX,EAEEF,IAFF,CAGIN,IAAI,IAAI;MACJC,OAAO,CAACD,IAAD,CAAP,CADI,CAEJ;IACH,CANL;EAQH,CATQ,EASN,EATM,CAAT;;EAWA,MAAMS,QAAQ,GAAC,MAAK;IAChBC,OAAO,CAACC,GAAR,CAAY,cAAZ;;IACA;IAAA,QAAC,MAAD;MAAA,uBACE,QAAC,KAAD;QAAO,IAAI,EAAE,cAAb;QAA4B,OAAO,eAAE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA;MAArC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAGH,CALD;;EAOA,oBACI;IAAK,SAAS,EAAC,eAAf;IAAA,wBACI;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAK,SAAS,EAAC,iBAAf;MAAA,UAGM,OAAOX,IAAP,KAAgB,WAAjB,gBACG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADH,GAIGA,IAAI,CAACY,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,kBAEL;QAAA,WACMZ,MAAM,KAAGW,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAV,gBACG;UAAA,UAAKA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,EAAWE,WAAX;QAAL;UAAA;UAAA;UAAA;QAAA,QADH,GACyC,EAF9C,EAIMb,MAAM,KAAGW,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAV,IACIX,MAAM,GAACW,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAP,eACD,QAAC,YAAD;UAAc,IAAI,EAAEA,IAApB;UAA0B,aAAa,EAAE,KAAzC;UAAgD,GAAG,EAAEV;QAArD;UAAA;UAAA;UAAA;QAAA,QAFH,iBAGG,QAAC,YAAD;UAAc,IAAI,EAAEU,IAApB;UAA0B,aAAa,EAAE,IAAzC;UAA+C,GAAG,EAAEV;QAApD;UAAA;UAAA;UAAA;QAAA,QAPR;MAAA,GAAUW,CAAV;QAAA;QAAA;QAAA;MAAA,QAFJ;IAPR;MAAA;MAAA;MAAA;IAAA,QALJ,eA8BI;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACI;QAAQ,OAAO,EAAEL,QAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QA9BJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAqCH;;GA7DQV,Q;;KAAAA,Q;AA+DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}