{"ast":null,"code":"var _jsxFileName = \"/Users/anishahalwai/Projects/My-Syptom-match/frontend/client/src/Diagnose.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Togglebutton from './Togglebutton';\nimport './Diagnose.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Diagnose() {\n  _s();\n\n  const [data, setData] = useState([{}]);\n  var letter = \"\";\n  useEffect(() => {\n    fetch('/sys').then(res => res.json()).then(data => {\n      setData(data); // console.log(data)\n    });\n  }, []);\n\n  const diagnose = () => {};\n\n  const if_stat = letter => {\n    /*#__PURE__*/\n    _jsxDEV(\"h3\", {\n      children: letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);\n\n    letter = item[0][0];\n\n    /*#__PURE__*/\n    _jsxDEV(Togglebutton, {\n      name: item,\n      category_same: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Diagnose-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select Symptoms: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), typeof data === \"undefined\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : data.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: letter !== item[0][0] ? if_stat(item[0][0]) : /*#__PURE__*/_jsxDEV(Togglebutton, {\n        name: item,\n        category_same: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: diagnose,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Diagnose, \"odp7ftN9IDg1xewk47EaAZiwHYc=\");\n\n_c = Diagnose;\nexport default Diagnose;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diagnose\");","map":{"version":3,"names":["React","useState","useEffect","Togglebutton","Diagnose","data","setData","letter","fetch","then","res","json","diagnose","if_stat","item","map","i"],"sources":["/Users/anishahalwai/Projects/My-Syptom-match/frontend/client/src/Diagnose.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Togglebutton from './Togglebutton';\nimport './Diagnose.css'\n\n\nfunction Diagnose(){\n\n    const [data, setData] = useState([{}]);\n    var letter = \"\"\n\n    useEffect(() => {\n        fetch('/sys').then(\n            res => res.json()\n        ).then(\n            data => {\n                setData(data)\n                // console.log(data)\n            }\n        )  \n    }, [])\n\n    const diagnose=()=> {\n\n    }\n\n    const if_stat=(letter)=> {\n        <h3>{letter}</h3>;\n        letter=item[0][0];\n        <Togglebutton name={item} category_same={false} />\n    }\n\n   \n    return (\n        <div className='Diagnose-page'>\n            <h1>Select Symptoms: </h1>\n\n            {(typeof data === \"undefined\") ? (\n                <p> Loading...</p>\n            ) : (\n                \n                data.map((item, i) => (\n                    \n                    <div>\n                        {(letter!==item[0][0]) ? (\n                            if_stat(item[0][0])\n                        ) : <Togglebutton name={item} category_same={true} />}\n                        \n                    </div>\n                ))\n            )}\n\n            <button onClick={diagnose}>Done</button>\n        </div>\n    );\n}\n\nexport default Diagnose;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,gBAAP;;;AAGA,SAASC,QAAT,GAAmB;EAAA;;EAEf,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;EACA,IAAIM,MAAM,GAAG,EAAb;EAEAL,SAAS,CAAC,MAAM;IACZM,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CACIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADX,EAEEF,IAFF,CAGIJ,IAAI,IAAI;MACJC,OAAO,CAACD,IAAD,CAAP,CADI,CAEJ;IACH,CANL;EAQH,CATQ,EASN,EATM,CAAT;;EAWA,MAAMO,QAAQ,GAAC,MAAK,CAEnB,CAFD;;EAIA,MAAMC,OAAO,GAAEN,MAAD,IAAW;IACrB;IAAA;MAAA,UAAKA;IAAL;MAAA;MAAA;MAAA;IAAA;;IACAA,MAAM,GAACO,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAP;;IACA;IAAA,QAAC,YAAD;MAAc,IAAI,EAAEA,IAApB;MAA0B,aAAa,EAAE;IAAzC;MAAA;MAAA;MAAA;IAAA;EACH,CAJD;;EAOA,oBACI;IAAK,SAAS,EAAC,eAAf;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAGM,OAAOT,IAAP,KAAgB,WAAjB,gBACG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADH,GAIGA,IAAI,CAACU,GAAL,CAAS,CAACD,IAAD,EAAOE,CAAP,kBAEL;MAAA,UACMT,MAAM,KAAGO,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAV,GACGD,OAAO,CAACC,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAD,CADV,gBAEG,QAAC,YAAD;QAAc,IAAI,EAAEA,IAApB;QAA0B,aAAa,EAAE;MAAzC;QAAA;QAAA;QAAA;MAAA;IAHR;MAAA;MAAA;MAAA;IAAA,QAFJ,CAPR,eAkBI;MAAQ,OAAO,EAAEF,QAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAlBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAsBH;;GAjDQR,Q;;KAAAA,Q;AAmDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}