{"ast":null,"code":"var _jsxFileName = \"/Users/anishahalwai/Projects/My-Syptom-match/frontend/client/src/Togglebutton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Togglebutton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Togglebutton = _ref => {\n  _s();\n\n  let {\n    name,\n    category_same,\n    arr\n  } = _ref;\n  const [selected, setSelected] = useState(true);\n\n  const toggle = () => {\n    setSelected(!selected);\n\n    if (selected) {\n      arr.concat({\n        name\n      });\n      console.log({\n        selected\n      });\n    } else {\n      arr.filter(function (e) {\n        return e !== {\n          name\n        };\n      });\n      console.log(arr);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: category_same ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggle,\n      className: selected ? \"toggle-select \" + \"same-category \" : \"toggle-unselect \" + \"same-category \",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggle,\n      className: selected ? \"toggle-select \" + \"diff-category \" : \"toggle-unselect \" + \"diff-category \",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Togglebutton, \"FXa1wFDwdVRyrPgaaAmtFagYObM=\");\n\n_c = Togglebutton;\nexport default Togglebutton;\n\nvar _c;\n\n$RefreshReg$(_c, \"Togglebutton\");","map":{"version":3,"names":["React","useState","Togglebutton","name","category_same","arr","selected","setSelected","toggle","concat","console","log","filter","e"],"sources":["/Users/anishahalwai/Projects/My-Syptom-match/frontend/client/src/Togglebutton.js"],"sourcesContent":["import React, {useState} from 'react'\nimport './Togglebutton.css';\n\n\nconst Togglebutton = ({name, category_same, arr}) => {\n    const [selected, setSelected] = useState(true);\n    const toggle=()=> {\n        setSelected(!selected);\n        if (selected) {\n\n            arr.concat({name})\n            console.log({selected})\n        }\n        else{\n            arr.filter(function(e) { return e !== {name} })\n            console.log(arr)\n        }\n    }\n    return (\n        <div>\n            {(category_same ? \n                <button onClick={toggle} className={(selected ? \"toggle-select \" + \"same-category \": \"toggle-unselect \" + \"same-category \")}>\n                    {name}\n                </button> : (\n                <button onClick={toggle} className={(selected ? \"toggle-select \" + \"diff-category \": \"toggle-unselect \" + \"diff-category \")}>\n                    {name}\n                </button>)\n             )}\n            \n            \n        </div>\n    )\n}\n\nexport default Togglebutton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,oBAAP;;;AAGA,MAAMC,YAAY,GAAG,QAAgC;EAAA;;EAAA,IAA/B;IAACC,IAAD;IAAOC,aAAP;IAAsBC;EAAtB,CAA+B;EACjD,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;;EACA,MAAMO,MAAM,GAAC,MAAK;IACdD,WAAW,CAAC,CAACD,QAAF,CAAX;;IACA,IAAIA,QAAJ,EAAc;MAEVD,GAAG,CAACI,MAAJ,CAAW;QAACN;MAAD,CAAX;MACAO,OAAO,CAACC,GAAR,CAAY;QAACL;MAAD,CAAZ;IACH,CAJD,MAKI;MACAD,GAAG,CAACO,MAAJ,CAAW,UAASC,CAAT,EAAY;QAAE,OAAOA,CAAC,KAAK;UAACV;QAAD,CAAb;MAAqB,CAA9C;MACAO,OAAO,CAACC,GAAR,CAAYN,GAAZ;IACH;EACJ,CAXD;;EAYA,oBACI;IAAA,UACMD,aAAa,gBACX;MAAQ,OAAO,EAAEI,MAAjB;MAAyB,SAAS,EAAGF,QAAQ,GAAG,mBAAmB,gBAAtB,GAAwC,qBAAqB,gBAA1G;MAAA,UACKH;IADL;MAAA;MAAA;MAAA;IAAA,QADW,gBAIX;MAAQ,OAAO,EAAEK,MAAjB;MAAyB,SAAS,EAAGF,QAAQ,GAAG,mBAAmB,gBAAtB,GAAwC,qBAAqB,gBAA1G;MAAA,UACKH;IADL;MAAA;MAAA;MAAA;IAAA;EALR;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CA5BD;;GAAMD,Y;;KAAAA,Y;AA8BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}