{"ast":null,"code":"var _jsxFileName = \"/Users/anishahalwai/Projects/SymptomMatch/frontend/client/src/Diagnose.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Togglebutton from './Togglebutton';\nimport './Diagnose.css';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport Predict from './Predict';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Diagnose() {\n  _s();\n\n  const [data, setData] = useState([{}]);\n  var letter = \"\";\n  var all = [];\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch('/sys').then(res => res.json()).then(data => {\n      setData(data); // console.log(data)\n    });\n  }, []);\n\n  const diagnose = () => {\n    console.log(\"Done clicked\");\n    navigate(\"/prediction\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Diagnose-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Diagnose-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select Symptoms: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Diagnose-header\",\n      children: data.map(_ref => {\n        let {\n          item,\n          i\n        } = _ref;\n\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          children: [\"try \", letter !== item[0][0] ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item[0][0].toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 41\n          }, this) : \"\"(letter !== item[0][0]) ? (letter = item[0][0], /*#__PURE__*/_jsxDEV(Togglebutton, {\n            name: item,\n            category_same: false,\n            arr: all\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 41\n          }, this)) : /*#__PURE__*/_jsxDEV(Togglebutton, {\n            name: item,\n            category_same: true,\n            arr: all\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 41\n          }, this), \" catch (TypeError) \"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Diagnose-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: diagnose,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Diagnose, \"k3Yk+fMJwbTGMDwPSrthcCWK+LU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Diagnose;\nexport default Diagnose;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diagnose\");","map":{"version":3,"names":["React","useState","useEffect","Togglebutton","Routes","Route","useNavigate","Predict","Diagnose","data","setData","letter","all","navigate","fetch","then","res","json","diagnose","console","log","map","item","i","toUpperCase"],"sources":["/Users/anishahalwai/Projects/SymptomMatch/frontend/client/src/Diagnose.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Togglebutton from './Togglebutton';\nimport './Diagnose.css'\nimport {Routes, Route, useNavigate} from 'react-router-dom';\nimport Predict from './Predict';\n\nfunction Diagnose(){\n\n    const [data, setData] = useState([{}]);\n    var letter = \"\"\n    var all = []\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        fetch('/sys').then(\n            res => res.json()\n        ).then(\n            data => {\n                setData(data)\n                // console.log(data)\n            }\n        )  \n    }, [])\n\n    const diagnose=()=> {\n        console.log(\"Done clicked\");\n        navigate(\"/prediction\")\n    };\n   \n    return (\n        <div className='Diagnose-page'>\n            <div className='Diagnose-header'> \n                <h1>Select Symptoms: </h1>\n            </div>\n            \n            <div className='Diagnose-header'>\n\n            \n                {/* {(typeof data === \"undefined\") ? (\n                    <p> Loading...</p>\n                ) : (\n                     */}\n                    {data.map(({item, i}) => {\n                        \n                            <div key={i}>\n                                try {\n                                    (letter!==item[0][0]) ?\n                                        <h3>{item[0][0].toUpperCase()}</h3> : \"\" \n                                    \n                                    (letter!==item[0][0]) ? \n                                        (letter=item[0][0],\n                                        <Togglebutton name={item} category_same={false} arr={all}/> ): \n                                        <Togglebutton name={item} category_same={true} arr={all}/>\n                                    \n                                } catch (TypeError) {\n                                    \n                                }\n                                \n                                \n                            </div>\n                \n                    })}\n                {/* )} */}\n                \n            </div>\n            \n            <div className='Diagnose-header'>   \n                <button onClick={diagnose}>Done</button> \n            </div>\n            \n        </div>\n    );\n}\n\nexport default Diagnose;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,gBAAP;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,WAAvB,QAAyC,kBAAzC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,QAAT,GAAmB;EAAA;;EAEf,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;EACA,IAAIU,MAAM,GAAG,EAAb;EACA,IAAIC,GAAG,GAAG,EAAV;EACA,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;EAEAJ,SAAS,CAAC,MAAM;IACZY,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CACIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADX,EAEEF,IAFF,CAGIN,IAAI,IAAI;MACJC,OAAO,CAACD,IAAD,CAAP,CADI,CAEJ;IACH,CANL;EAQH,CATQ,EASN,EATM,CAAT;;EAWA,MAAMS,QAAQ,GAAC,MAAK;IAChBC,OAAO,CAACC,GAAR,CAAY,cAAZ;IACAP,QAAQ,CAAC,aAAD,CAAR;EACH,CAHD;;EAKA,oBACI;IAAK,SAAS,EAAC,eAAf;IAAA,wBACI;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAK,SAAS,EAAC,iBAAf;MAAA,UAOSJ,IAAI,CAACY,GAAL,CAAS,QAAe;QAAA,IAAd;UAACC,IAAD;UAAOC;QAAP,CAAc;;QAEjB;QAAA;UAAA,mBAESZ,MAAM,KAAGW,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAV,gBACI;YAAA,UAAKA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,EAAWE,WAAX;UAAL;YAAA;YAAA;YAAA;UAAA,QADJ,GAC0C,GAEzCb,MAAM,KAAGW,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAFgC,KAGrCX,MAAM,GAACW,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAP,eACD,QAAC,YAAD;YAAc,IAAI,EAAEA,IAApB;YAA0B,aAAa,EAAE,KAAzC;YAAgD,GAAG,EAAEV;UAArD;YAAA;YAAA;YAAA;UAAA,QAJsC,iBAKtC,QAAC,YAAD;YAAc,IAAI,EAAEU,IAApB;YAA0B,aAAa,EAAE,IAAzC;YAA+C,GAAG,EAAEV;UAApD;YAAA;YAAA;YAAA;UAAA,QARZ;QAAA,GAAUW,CAAV;UAAA;UAAA;UAAA;QAAA;MAiBP,CAnBA;IAPT;MAAA;MAAA;MAAA;IAAA,QALJ,eAoCI;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACI;QAAQ,OAAO,EAAEL,QAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QApCJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA2CH;;GAlEQV,Q;UAKYF,W;;;KALZE,Q;AAoET,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}